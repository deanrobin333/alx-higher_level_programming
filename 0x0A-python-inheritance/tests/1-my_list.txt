# 1-my_list.txt

==========================
doctest for 1-my_list.py
==========================

Importing the MyList class which inherits from List and then testing the 
``print_sorted(self)`` function in Mylist class that prints a sorted list of integers

Importing class dynamically
    >>> MyList = __import__('1-my_list').MyList

Testing with positive numbers
    >>> my_list = MyList([1, 9, 6, 7])
    >>> my_list.print_sorted()
    [1, 6, 7, 9]

Test a list of negative numbers.
    >>> my_list = MyList([-4, -1, -3, -5, -2])
    >>> my_list.print_sorted()
    [-5, -4, -3, -2, -1]

Testing MyList Inherits from `list`
    >>> print(issubclass(MyList, list))
    True

Test if 'print_sorted' is an attribute of class MyList.
    >>> my_list = MyList()
    >>> 'print_sorted' in dir(MyList)
    True

Test to see the printable string.
    >>> my_list = MyList()
    >>> my_list.append(33)
    >>> print(my_list)
    [33]

Test to see if print_sorted() returns a new list.
    >>> my_list = MyList([9, 3, 6])
    >>> my_list.print_sorted()
    [3, 6, 9]
    >>> my_list
    [9, 3, 6]

Test an empty list.
    >>> my_list = MyList()
    >>> my_list.print_sorted()
    []

==============================
MORE TESTS

Test a list of repeated numbers.
    >>> my_list = MyList()
    >>> my_list.append(3)
    >>> my_list += [7]
    >>> my_list.append(7)
    >>> my_list.append(3)
    >>> my_list += [7]
    >>> my_list.print_sorted()
    [3, 3, 7, 7, 7]

Test a list of positive and negative numbers.
    >>> my_list = MyList([1, 4, -2, 3, -5])
    >>> my_list.print_sorted()
    [-5, -2, 1, 3, 4]

Test a list containing only one number.
    >>> my_list = MyList()
    >>> my_list.append(33)
    >>> my_list.print_sorted()
    [33]

    >>> my_list = MyList()
    >>> my_list += [77]
    >>> my_list.print_sorted()
    [77]

Test a list of positive string numbers.
    >>> my_list = MyList(["1", "4", "2", "3", "5"])
    >>> my_list.print_sorted()
    ['1', '2', '3', '4', '5']

Test a list of negative string numbers.
    >>> my_list = MyList(["-1", "-4", "-2", "-3", "-5"])
    >>> my_list.print_sorted()
    ['-1', '-2', '-3', '-4', '-5']

Test a list of positive and negative string numbers.
    >>> my_list = MyList(["-1", "4", "-2", "3", "-5"])
    >>> my_list.print_sorted()
    ['-1', '-2', '-5', '3', '4']

Test a list of positive characters.
    >>> my_list = MyList(['d', 'y', 'n', 'o', 'f', 'i', 'n'])
    >>> my_list.print_sorted()
    ['d', 'f', 'i', 'n', 'n', 'o', 'y']

Test a list of negative characters.
    >>> my_list = MyList(['-d', '-y', '-n', '-o', '-f', '-i', '-n'])
    >>> my_list.print_sorted()
    ['-d', '-f', '-i', '-n', '-n', '-o', '-y']

Test a list of positive and negative characters.
    >>> my_list = MyList(['d', '-y', 'n', '-o', '-f', 'i', '-n'])
    >>> my_list.print_sorted()
    ['-f', '-n', '-o', '-y', 'd', 'i', 'n']

Passing more than one argument to sort method.
    >>> my_list = MyList()
    >>> my_list.print_sorted([1, 2])
    Traceback (most recent call last):
        ...
    TypeError: print_sorted() takes 1 positional argument but 2 were given

    >>> my_list = MyList()
    >>> my_list.print_sorted([1, 2], [3, 4])
    Traceback (most recent call last):
        ...
    TypeError: print_sorted() takes 1 positional argument but 3 were given
